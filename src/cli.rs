use clap::Parser;

/// Turn the volume down on Cargo errors and warnings.
///
/// Quiet lets you do this by only showing the number of errors you want. Quiet can also limit errors to only a file you specify.
///
/// Quiet needs access to the JSON message output generated by Cargo with `--message-format json-diagnostic-rendered-ansi`.
///
/// For example:
/// cargo test --message-format json-diagnostic-rendered-ansi 2>&1  | quiet --items 1
///
/// The following example scripts can be found in the repository:
///
/// qcompile - Only compiles your production code
///
/// qcompile-test - Compiles your production code and test code
///
/// qrun-test - Runs your unit and integration tests
///
/// Note: The above scripts use `watch`, which you can install with: `cargo install cargo-watch`. See https://crates.io/crates/cargo-watch for more information.
///
/// Feel free to modify these scripts to suit your own needs.

#[derive(Parser)]
#[command(author, version, about)]
#[derive(Debug, Clone)]
pub struct Cli {

  /// The number of items to show. Values range from 0 to 255. This includes errors and warnings to display. By default only errors are shown. Use --show-warnings to include warnings.
  #[arg(long, )]
  pub items: u8,

  /// Flag to include warnings in the output
  #[arg(long, default_value_t = false)]
  pub show_warnings: bool,

  /// The file (if any) to filter on. Matches the file at the end of the path so you don't have to specify a full path. Example: --file-filter main.rs
  #[arg(long)]
  pub file_filter: Option<String>
}

